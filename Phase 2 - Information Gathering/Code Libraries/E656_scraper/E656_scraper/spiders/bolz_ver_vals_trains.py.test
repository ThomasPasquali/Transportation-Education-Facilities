import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import scrapy
from scrapy.http import HtmlResponse
from E656_scraper.items import Train, TripStop

class TrainsSpider(scrapy.Spider):
  name = 'TrainsTest'
  allowed_domains = ['www.e656.net']
  start_urls = [
    'https://www.e656.net/orario/stazione/trento/treni-dalle-00-alle-06.html',
    # 'https://www.e656.net/orario/stazione/trento/treni-dalle-06-alle-12.html',
    # 'https://www.e656.net/orario/stazione/trento/treni-dalle-12-alle-15.html',
    # 'https://www.e656.net/orario/stazione/trento/treni-dalle-15-alle-18.html',
    # 'https://www.e656.net/orario/stazione/trento/treni-dalle-18-alle-24.html',
  ]

  def __init__(self, *args, **kwargs):
    super(TrainsSpider, self).__init__(*args, **kwargs)
    self.driver = webdriver.Chrome()  # You can adjust this based on your WebDriver choice

  def start_requests(self):
    for url in self.start_urls:
      yield scrapy.Request(url, self.parse, meta={'driver': self.driver})

  def parse(self, response):
    trains = response.css('table tbody tr')
    for train in trains:
      if not 'ng-show' in train.attrib:
        train_info = train.css('td')
        t = Train(item_type='Train')
        train_number = train_info[1].css('span.train-number a')
        # Could also get train type e.g. Regionale, Regionale veloce tec.
        t['name'] = train_number.css('::text').get().strip()
        t['url'] = train_number.attrib['href']
        print(t['name'], t['url'])
        yield response.follow(
          f'https://www.e656.net{t["url"]}', 
          self.parse_train_stops,
          cb_kwargs=dict(train=t),
          meta={'driver': self.driver}
        )
        yield t
        break

  def parse_train_stops (self, response, train):
    driver = response.meta['driver']
        
    # Replace 'your_ng_repeat_class' with the appropriate CSS selector for ng-repeat
    ng_repeat_selector = 'table:nth-child(2) > tbody'

    try:
      # Wait for ng-repeat elements to be present
      elements_present = EC.presence_of_all_elements_located((By.CSS_SELECTOR, ng_repeat_selector))
      print('PRESENT!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!', elements_present)
      WebDriverWait(driver, 10).until(elements_present)

      # Allow some time for dynamic content to load
      time.sleep(2)

      # Create a new HtmlResponse with the fully rendered HTML
      body = driver.page_source
      response = HtmlResponse(driver.current_url, body=body, encoding='utf-8')

      tmp = response.css('table')

      calendar_info = tmp[0].css('tbody')
      stops_info = tmp[1].css('tbody tr')

      # TODO wait for element to render
      print('???????????????????', calendar_info.get())
      for c_info in calendar_info:
        c_info = c_info.css('td')
        print('BBBBBBBBB', c_info[0].get(), c_info[1].get())
      
      for s_info in stops_info:
        s_info = s_info.css('td')
        # yield TripStop(
        #   item_type='TripStop',
        #   train_name=train['name'],
        #   stop=s_info[0].css('::text').get(),
        #   arrival_time=s_info[1].css('::text').get(),
        #   departure_time=s_info[2].css('::text').get()
        # )

      # Now you can extract data from the fully rendered page
      data = response.css('your_css_selector_here::text').get()
      print('Rendered Data:', data)

    finally:
        driver.quit()
